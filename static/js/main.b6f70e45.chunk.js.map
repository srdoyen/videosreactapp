{"version":3,"sources":["components/SearchBar.js","apis/youtube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","term","onInputChange","event","setState","target","value","onFormSubmit","preventDefault","props","className","onSubmit","this","type","onChange","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","renderedList","map","id","videoId","VideoDetail","videoSrc","description","App","selectedVideo","onTermSubmit","a","youtube","get","q","response","data","items","ReactDOM","render","document","querySelector"],"mappings":"2OAqCeA,E,4MAlCXC,MAAQ,CAACC,KAAM,I,EAEfC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAACH,KAAME,EAAME,OAAOC,S,EAItCC,aAAe,SAACJ,GACZA,EAAMK,iBACN,EAAKC,MAAMF,aAAa,EAAKP,MAAMC,O,uDAMnC,OACA,qBAAKS,UAAU,wBAAf,SACI,sBAAMA,UAAU,UAAUC,SAAUC,KAAKL,aAAzC,SACI,sBAAKG,UAAU,QAAf,UACI,iDACA,uBACIG,KAAK,OACLP,MAAOM,KAAKZ,MAAMC,KAClBa,SAAUF,KAAKV,2B,GAxBfa,IAAMC,W,QCGfC,E,OAAAA,EAAMC,OAAO,CAExBC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACNR,KAAM,QACNS,WAAY,EACZC,IAVI,6CCkBGC,G,MAjBG,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,cAGvB,OACI,sBAAKC,QAAS,kBAAID,EAAcD,IAAQf,UAAU,kBAAlD,UACI,qBACIkB,IAAKH,EAAMI,QAAQC,MACnBpB,UAAU,WACVqB,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MAEzC,qBAAKxB,UAAU,UAAf,SACI,qBAAKA,UAAU,SAAf,SAAyBe,EAAMI,QAAQC,eCHxCK,EARG,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,OAAQV,EAAmB,EAAnBA,cAClBW,EAAeD,EAAOE,KAAI,SAAAb,GAC5B,OAAO,cAAC,EAAD,CAAkCA,MAAOA,EAAOC,cAAeA,GAA/CD,EAAMc,GAAGC,YAGpC,OAAO,qBAAK9B,UAAU,0BAAf,SAA0C2B,KCetCI,EArBK,SAAC,GAAa,IAAZhB,EAAW,EAAXA,MAClB,IAAIA,EACA,OAAO,6CAGX,IAAMiB,EAAQ,wCAAoCjB,EAAMc,GAAGC,SAE3D,OACA,gCACI,qBAAK9B,UAAU,WAAf,SACI,wBAAQqB,IAAKW,EAAUZ,MAAM,mBAEjC,sBAAKpB,UAAU,aAAf,UACI,oBAAIA,UAAU,YAAd,SAA2Be,EAAMI,QAAQC,QACzC,4BAAIL,EAAMI,QAAQc,qBCwCfC,E,4MAjDX5C,MAAM,CAACoC,OAAS,GAAIS,cAAe,M,EAQnCC,a,uCAAe,WAAO7C,GAAP,eAAA8C,EAAA,sEAEYC,EAAQC,IAAI,UAAW,CAC1C7B,OAAQ,CACJ8B,EAAGjD,KAJA,OAELkD,EAFK,OAQX,EAAK/C,SAAS,CACVgC,OAAQe,EAASC,KAAKC,MACtBR,cAAeM,EAASC,KAAKC,MAAM,KAV5B,2C,wDAcf3B,cAAgB,SAACD,GACb,EAAKrB,SAAS,CAACyC,cAAepB,K,kEAlB9Bb,KAAKkC,aAAa,e,+BAsBlB,OACA,sBAAKpC,UAAU,eAAf,UACI,cAAC,EAAD,CAAWH,aAAcK,KAAKkC,eAC9B,qBAAKpC,UAAU,UAAf,SACI,sBAAKA,UAAU,SAAf,UACI,qBAAKA,UAAU,qBAAf,SACI,cAAC,EAAD,CAAae,MAAOb,KAAKZ,MAAM6C,kBAEnC,qBAAKnC,UAAU,mBAAf,SACI,cAAC,EAAD,CACI0B,OAAQxB,KAAKZ,MAAMoC,OACnBV,cAAed,KAAKc,8B,GAvC9BX,IAAMC,WCFxBsC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.b6f70e45.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n    state = {term: ''};\r\n\r\n    onInputChange = (event) => {\r\n        this.setState({term: event.target.value});\r\n\r\n    };\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onFormSubmit(this.state.term);\r\n        //TODO: make sure we call \r\n        //callback from parent component\r\n    }\r\n\r\n    render() {\r\n        return(\r\n        <div className=\"search-bar ui segment\">\r\n            <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                <div className=\"field\">\r\n                    <label>Video Search</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        value={this.state.term}\r\n                        onChange={this.onInputChange}\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n        \r\n        \r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import axios from 'axios';\r\n\r\nconst KEY = 'AIzaSyABUk3vF2tM1c2gNaqOzDeVC7cWC_4eDRc';\r\n\r\n\r\nexport default axios.create({\r\n\r\n    baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n    params: {\r\n        part: 'snippet',\r\n        type: 'video',\r\n        maxResults: 5,\r\n        key: KEY\r\n    }\r\n});\r\n","import './VideoItem.css';\r\nimport React from 'react';\r\n\r\nconst VideoItem = ({video, onVideoSelect}) => {\r\n    \r\n\r\n    return (\r\n        <div onClick={()=>onVideoSelect(video)} className=\"video-item item\">\r\n            <img \r\n                alt={video.snippet.title} \r\n                className=\"ui image\" \r\n                src={video.snippet.thumbnails.medium.url}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"header\">{video.snippet.title}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\nconst VideoList = ({videos, onVideoSelect}) => {\r\n    const renderedList = videos.map(video => {\r\n        return <VideoItem key={video.id.videoId} video={video} onVideoSelect={onVideoSelect}/>\r\n    })\r\n\r\n    return <div className=\"ui relaxed divided list\">{renderedList}</div>\r\n};\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({video}) => {\r\n    if(!video) {\r\n        return <div>Loading...</div>\r\n        \r\n    }\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return (\r\n    <div>\r\n        <div className=\"ui embed\">\r\n            <iframe src={videoSrc} title=\"video player\" />\r\n        </div>\r\n        <div className=\"ui segment\">\r\n            <h4 className=\"ui header\">{video.snippet.title}</h4>\r\n            <p>{video.snippet.description}</p>\r\n        </div>\r\n    </div>\r\n\r\n    );\r\n};\r\n\r\nexport default VideoDetail;","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport youtube from '../apis/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\n\r\nclass App extends React.Component {\r\n    state={videos : [], selectedVideo: null};\r\n\r\n\r\n    componentDidMount() {\r\n        // Default call\r\n        this.onTermSubmit('buildings')\r\n    }\r\n\r\n    onTermSubmit = async (term) => {\r\n        //youtube=preconfigured axios\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                q: term\r\n            }\r\n        });\r\n\r\n        this.setState({\r\n            videos: response.data.items, \r\n            selectedVideo: response.data.items[0]}\r\n        );\r\n    }\r\n\r\n    onVideoSelect = (video) => {\r\n        this.setState({selectedVideo: video});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"ui container\">\r\n            <SearchBar onFormSubmit={this.onTermSubmit}/>\r\n            <div className=\"ui grid\">\r\n                <div className=\"ui row\">\r\n                    <div className=\"eleven wide column\">\r\n                        <VideoDetail video={this.state.selectedVideo} />\r\n                    </div>\r\n                    <div className=\"five wide column\">\r\n                        <VideoList \r\n                            videos={this.state.videos} \r\n                            onVideoSelect={this.onVideoSelect}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}